name: Github Automation
on:
  push:
    branches:
      - 'hotfix-*'
      - 'release-*'

jobs:
  release:
    if: github.repository_owner == 'azataiot' && github.repository == 'azataiot/django-template'
    env:
      GH_TOKEN: ${{ github.token }}
    permissions:
      issues: write
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: gh
        run: |
          gh auth status
      - name: Get version from pyproject.toml
        run: |
          echo "VERSION=$(grep '^version =' pyproject.toml | awk -F\" '{print $2}')" >> $GITHUB_ENV

      - name: Check if release exists
        id: check_release
        run: |
          if gh release view "$VERSION" > /dev/null 2>&1; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi
        continue-on-error: true

      - name: Delete existing release
        if: steps.check_release.outputs.exists == 'true'
        run: |
          gh release delete "$VERSION" --yes

      - name: gh release create
        run: |
          gh release create --generate-notes --title "Release $VERSION" "$VERSION"

      - name: gh pr create (main)
        if: success()
        run: |
          gh pr create --title "merge release $VERSION into main" --body "merging $VERSION into main"  --label "update" --base "main"

      - name: gh pr create (dev)
        if: success()
        run: |
          gh pr create --title "merge release $VERSION into dev" --body "merging $VERSION into dev"  --label "update" --base "dev"
